name: PR

on:
  pull_request:

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    container: rust:1.63.0-bullseye
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Secrets scan
        run: >
          apt update && apt install -y curl tar gzip &&
          curl -LO https://github.com/trufflesecurity/trufflehog/releases/download/v3.12.0/trufflehog_3.12.0_linux_amd64.tar.gz &&
          tar -zxf trufflehog_3.12.0_linux_amd64.tar.gz &&
          mv -v trufflehog /usr/bin/trufflehog &&
          rm -rf README.md LICENSE trufflehog_3.12.0_linux_amd64.tar.gz &&
          trufflehog git --concurrency=$(nproc) --no-update --since-commit=$(echo $BASE_COMMIT) file://./
        continue-on-error: true
        env:
          BASE_COMMIT: ${{ github.sha }}
      - name: Prerequisite
        run: apt-get install -y make
      - name: Build
        run: make build
      - name: Test
        run: make test
        env:
          GITHUB_TOKEN: ${{ github.token }}

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    container: node:18.9.0-bullseye
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Secrets scan
        run: >
          apt update && apt install -y curl tar gzip &&
          curl -LO https://github.com/trufflesecurity/trufflehog/releases/download/v3.12.0/trufflehog_3.12.0_linux_amd64.tar.gz &&
          tar -zxf trufflehog_3.12.0_linux_amd64.tar.gz &&
          mv -v trufflehog /usr/bin/trufflehog &&
          rm -rf README.md LICENSE trufflehog_3.12.0_linux_amd64.tar.gz &&
          trufflehog git --concurrency=$(nproc) --no-update --since-commit=$(echo $BASE_COMMIT) file://./
        continue-on-error: true
        env:
          BASE_COMMIT: ${{ github.sha }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
